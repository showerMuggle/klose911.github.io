#+TITLE: 集合
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/main.css" />
#+HTML_LINK_UP: module.html   
#+HTML_LINK_HOME: rust.html
#+OPTIONS: num:nil timestamp:nil ^:nil

Rust 标准库中包含一系列被称为 _集合_ ，非常有用的 *数据结构* ：
+ 大部分其他数据类型都代表一个特定的值，不过集合可以 _包含多个值_
+ 不同于内建的数组和元组类型，这些集合指向的数据是 _储存在堆_ 上的，这意味着数据的数量不必在编译时就已知，并且还可以随着程序的运行增长或缩小
+ 每种集合都有着不同功能和成本，而根据当前情况选择合适的集合，这是一项始终成长的技能

这一章将详细的了解三个在 Rust 程序中被广泛使用的集合：
1. vector : 允许 _一个挨着一个_ 地储存一系列数量可变的值
2. String: 是一个 _字符_ 的集合
3. hashMap: 允许将 _值_ 与一个特定的 _键_ 相关联

#+BEGIN_EXAMPLE
  接下来将讨论如何创建和更新 vector、字符串和哈希 map，以及它们有什么特别之处
#+END_EXAMPLE
* vector  

* String 
* hashMap 
